@use 'sass:math';
@use 'sass:list';
@use '../themes/default-theme' as default-theme;

$default-browser-font-size: 16;

@function value-to-rem($value) {
  $unit: math.unit($value);

  @if $value == 0 {
    @return 0;
  } @else if $unit == 'px' {
    @return math.div($value, $default-browser-font-size * 1px) * 1rem;
  } @else if $unit == 'rem' {
    @return $value;
  } @else {
    @error 'Value must be in px, or rem.';
  }
}

@function negate-value($value) {
  @return $value * -1
};

@function debug-map($map, $level: 1) {
  @if type-of($map) != 'map' {
    @return null;
  }

  $output: '';
  $newline: '\A ';

  @if $level == 1 {
    @each $key, $value in $map {
      $output: $output + '#{$newline}- #{$key} #{debug-map($value, $level + 1)}';
    }
  } @else {
    $output: '(';
    $i: 1;

    @each $key, $value in $map {
      $sep: if($i < list.length($map), ', ', '');
      $output: $output + '#{$key}#{$sep}#{debug-map($value, $level + 1)}';
      $i: $i + 1;
    }

    $output: $output + ')';
  }

  // stylelint-disable
  @debug 'Map: #{$output}';
  // stylelint-enable
  @return $output;
}
